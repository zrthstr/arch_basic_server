---

- name: System | Pacman | full upgrade
  pacman:
    update_cache: yes
    upgrade: yes


- name: System | Pacman | install standard packages
  pacman:
    name: "{{ packages | default(default_packages) }}"


- name: System | Pacman | install sudo
  pacman:
    name: sudo


- name: System | zsh | check if present
  stat:
    path: /bin/zsh
  register: zsh


- name: User | root | shell to zsh
  user:
    name: root
    shell: /bin/zsh
  when: zsh.stat.exists


- name: User | admin | create
  user:
    name: "{{ admin_acc }}"
    shell: /bin/zsh
    groups: wheel
    append: yes


- name: User | admin | add pubkey
  authorized_key:
    user: "{{ admin_acc }}"
    state: present
    manage_dir: yes
    key: "{{ lookup('file', admin_acc_pubkey) }}"


- name: User | sudo | grant wheel group passwordless sudo
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%wheel'
    line: '%wheel ALL=(ALL) NOPASSWD: ALL'
    validate: visudo -cf %s 


- name: User | admin | check if .zshrc present
  stat:
    path: "/home/{{ admin_acc }}/.zshrc"
  register: zshrc


- name: User | admin | touch .zshrc
  file:
    path: "/home/{{ admin_acc }}/.zshrc"
    state: touch
    owner: "{{ admin_acc }}"
    group: "{{ admin_acc }}"
    mode: 0700
  when: zshrc.stat.exists is defined and not zshrc.stat.exists


- name: User | root | copy .vimrc
  copy:
    src: _.vimrc
    dest: "/root/.vimrc"
    owner: "root"
    group: "root"
    mode: "0600"

- name: User | admin | copy .vimrc
  copy:
    src: _.vimrc
    dest: "/home/{{ admin_acc }}/.vimrc"
    owner: "{{ admin_acc }}"
    group: "{{ admin_acc }}"
    mode: "0600"


- name: System | sshd | repair scaleways broken ssh-sftp conf
  replace:
    path: /etc/ssh/sshd_config
    regexp: '^Subsystem sftp /usr/lib/openssh/sftp-server$'
    replace: 'Subsystem sftp /usr/lib/ssh/sftp-server'
    validate: "/usr/sbin/sshd -tf %s"
  notify: restart sshd


- name: System | sshd | disable password auth
  replace:
    path: /etc/ssh/sshd_config
    regexp: '^ChallengeResponseAuthentication yes$'
    replace: 'ChallengeResponseAuthentication no'
    validate: "/usr/sbin/sshd -tf %s"
  notify: restart sshd

